# Generated by Django 5.0.4 on 2025-04-04 14:43

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=400, verbose_name='المدينة')),
                ('zip_code', models.CharField(max_length=100, verbose_name='الرمز البريدي')),
                ('street', models.CharField(max_length=500, verbose_name='الشارع')),
                ('state', models.CharField(max_length=100, verbose_name='المنطقة')),
                ('country', models.CharField(max_length=100, verbose_name='الدولة')),
                ('phone_no', models.CharField(max_length=100, verbose_name='رقم الهاتف')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='المبلغ الإجمالي')),
                ('payment_status', models.CharField(choices=[('Paid', 'مدفوع'), ('Unpaid', 'غير مدفوع'), ('Refunded', 'تم الاسترجاع'), ('Partially_Refunded', 'تم استرجاع جزء')], default='Unpaid', max_length=30, verbose_name='حالة الدفع')),
                ('payment_mode', models.CharField(choices=[('COD', 'الدفع عند الاستلام'), ('CARD', 'بطاقة ائتمان'), ('Transfer', 'حوالة بنكية'), ('Wallet', 'محفظة إلكترونية')], default='COD', max_length=30, verbose_name='طريقة الدفع')),
                ('status', models.CharField(choices=[('Processing', 'قيد المعالجة'), ('Shipped', 'تم الشحن'), ('Delivered', 'تم التوصيل'), ('Cancelled', 'ملغي'), ('Returned', 'تم الإرجاع')], default='Processing', max_length=60, verbose_name='حالة الطلب')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'طلب',
                'verbose_name_plural': 'الطلبات',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='الاسم')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='الكمية')),
                ('price', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(0)], verbose_name='السعر')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='order.order', verbose_name='الطلب')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_items', to='product.product', verbose_name='المنتج')),
            ],
            options={
                'verbose_name': 'عنصر الطلب',
                'verbose_name_plural': 'عناصر الطلب',
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['user', 'status'], name='order_order_user_id_f784ac_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['created_at'], name='order_order_created_ffede0_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['payment_status'], name='order_order_payment_6d88a5_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['order', 'product'], name='order_order_order_i_89d10a_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['product'], name='order_order_product_ed1645_idx'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.CheckConstraint(check=models.Q(('quantity__gte', 1)), name='quantity_gte_1'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.CheckConstraint(check=models.Q(('price__gte', 0)), name='price_gte_0'),
        ),
    ]
